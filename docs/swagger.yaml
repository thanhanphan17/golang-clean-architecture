basePath: /api/v1
definitions:
  cerr.AppError:
    properties:
      error_key:
        type: string
      log:
        type: string
      message:
        type: string
      request_id:
        type: string
      status_code:
        type: integer
    type: object
  common.SuccessRes:
    properties:
      data: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
  req.CreateUserReq:
    properties:
      email:
        type: string
      name:
        maxLength: 30
        minLength: 10
        type: string
      password:
        type: string
      role:
        type: string
    required:
    - email
    - name
    - password
    - role
    type: object
  req.LoginUserReq:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
host: localhost:8888
info:
  contact:
    email: thanhanphan17@gmail.com
    name: API Support
    url: http://www.swagger.io/support
  description: Simple implementation of clean architecture
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Golang Clean Architecture Example
  version: "1.0"
paths:
  /user/confirm-verify:
    post:
      consumes:
      - application/json
      description: Verify a user with the by OTP.
      parameters:
      - description: OTP code
        in: query
        name: otp
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/cerr.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/cerr.AppError'
      security:
      - JWT: []
      summary: Verify user with OTP
      tags:
      - user-service
  /user/login:
    post:
      consumes:
      - application/json
      description: Login user account with "email" and "password"
      parameters:
      - description: user
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/req.LoginUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/cerr.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/cerr.AppError'
      summary: Login user account
      tags:
      - user-service
  /user/otp-resend:
    get:
      consumes:
      - application/json
      description: Resend One-Time-Password (use verify token responsed from verify
        API)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/cerr.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/cerr.AppError'
      security:
      - JWT: []
      summary: Resend OTP
      tags:
      - user-service
  /user/register:
    post:
      consumes:
      - application/json
      description: Create user account with "email", "name" and "password"
      parameters:
      - description: user
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/req.CreateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/cerr.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/cerr.AppError'
      summary: Create user account
      tags:
      - user-service
  /user/verify:
    get:
      consumes:
      - application/json
      description: Verify user email
      parameters:
      - description: user's email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/cerr.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/cerr.AppError'
      summary: Verify user
      tags:
      - user-service
securityDefinitions:
  jwt:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
